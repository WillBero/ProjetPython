apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: APP_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: APP_SECRET_KEY
                  name: env
            - name: MAIL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MAIL_PASSWORD
                  name: env
            - name: MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  key: MAIL_PORT
                  name: env
            - name: MAIL_SERVER
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SERVER
                  name: env
            - name: MAIL_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MAIL_USERNAME
                  name: env
            - name: MAIL_USE_SSL
              valueFrom:
                configMapKeyRef:
                  key: MAIL_USE_SSL
                  name: env
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DATABASE
                  name: env
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_PASSWORD
                  name: env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: env
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_USER
                  name: env
            - name: db
              valueFrom:
                configMapKeyRef:
                  key: db
                  name: env
            - name: host
              valueFrom:
                configMapKeyRef:
                  key: host
                  name: env
            - name: password
              valueFrom:
                configMapKeyRef:
                  key: password
                  name: env
            - name: root
              valueFrom:
                configMapKeyRef:
                  key: root
                  name: env
            - name: user
              valueFrom:
                configMapKeyRef:
                  key: user
                  name: env
          image: mysql
          livenessProbe:
            exec:
              command:
                - mysqladmin ping -h localhost -p
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: db
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: db-cm0
              subPath: init.sql
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: init.sql
                path: init.sql
            name: db-cm0
          name: db-cm0
